const e=async e=>{try{const t=await fetch(`https://metaweather-api.glitch.me/${e}`);if(!t.ok)throw new Error("Something went wrong");return await t.json()}catch(e){console.log(e)}};class t{async getQueryLocations(t){const a=`/api/location/search/?query=${t}`;return await e(a)}async getWeatherData(t){const a=`/api/location/${t}`;return await e(a)}async getHistoricalWeatherData(t,a){const r=`/api/location/${t}/${a}`;return await e(r)}}class a{setText(e){this.elem.innerText=e}setImage(e){this.elem.src=e}setWindIcon(e){e+=90,this.elem.style.transform=`rotate(${e}deg)`}setDatalistChildren(e){this.elem.innerHTML="",e.forEach((e=>{const t=document.createElement("option");t.value=e.title,t.dataset.woeid=e.woeid,this.elem.append(t)}))}toggleDisplay(){this.elem.style.display="none"===this.elem.style.display?"flex":"none"}reset(){this.elem.value=""}setDay(e){return["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][((new Date).getDay()+e)%7]}setMonth(){return["January","February","March","April","May","June","July","August","September","October","November","December"][(new Date).getMonth()%12]}static setUpdatedTime(e,t){const a=Date.now()-Date.parse(t);let r=Math.floor(a/1e3%60),n=Math.floor(a/6e4%60),s=Math.floor(a/36e5%24);s=s<10?"0"+s:s,n=n<10?"0"+n:n,r=r<10?"0"+r:r,e.setText(`Updated ${s} hours ${n} minutes ago`)}static setWarsawWeather(e){new a("local-city-country").setText(e.title);const t=new a("local-date");t.setText(`${t.setDay(0)} ${(new Date).getDate()} ${t.setMonth()}`);new a("local-abbr").setImage(`https://www.metaweather.com/static/img/weather/${e.consolidated_weather[0].weather_state_abbr}.svg`);new a("local-temp").setText(`${parseInt(e.consolidated_weather[0].the_temp,10)}°C`);new a("local-low").setText(`${parseInt(e.consolidated_weather[0].min_temp,10)}°C`);new a("local-high").setText(`${parseInt(e.consolidated_weather[0].max_temp,10)}°C`);new a("local-speed").setText(`${parseInt(e.consolidated_weather[0].wind_speed,10)} mph`)}constructor(e){this.elem=document.getElementById(e)}}var r,n,s;s=e=>{new a("daily-city-name").setText(e.title),new a("daily-current-time").setText(e.time.substr(11,5)),new a("daily-abbr").setImage(`https://www.metaweather.com/static/img/weather/${e.consolidated_weather[0].weather_state_abbr}.svg`),new a("daily-temp").setText(`${parseInt(e.consolidated_weather[0].the_temp,10)}°C`),new a("daily-state").setText(e.consolidated_weather[0].weather_state_name),new a("daily-min").setText(`min: ${parseInt(e.consolidated_weather[0].min_temp,10)}°C`),new a("daily-max").setText(`max: ${parseInt(e.consolidated_weather[0].max_temp,10)}°C`),new a("daily-arrow").setWindIcon(e.consolidated_weather[0].wind_direction),new a("daily-wind-speed").setText(`${parseInt(e.consolidated_weather[0].wind_speed,10)}\n mph`);const t=new a("daily-update");a.setUpdatedTime(t,e.consolidated_weather[0].created);for(let t=1;t<6;t++){const r=new a(`card${t}-abbr`),n=new a(`card${t}-temp`),s=new a(`card${t}-state`),o=new a(`card${t}-wind`),i=new a(`card${t}-arrow`),c=new a(`card${t}-day`);r.setImage(`https://www.metaweather.com/static/img/weather/${e.consolidated_weather[t].weather_state_abbr}.svg`),n.setText(`${parseInt(e.consolidated_weather[t].the_temp,10)}°C`),s.setText(e.consolidated_weather[t].weather_state_name),o.setText(`${parseInt(e.consolidated_weather[t].wind_speed,10)}\n mph`),i.setWindIcon(e.consolidated_weather[t].wind_direction),c.setText(c.setDay(t))}},(n="setWeatherInfo")in(r=a)?Object.defineProperty(r,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):r[n]=s;const o="standby",i="error",c="ready",l="loading",d="reload",w=(e,t)=>{switch([...e.querySelector(".search-icon-container").children].forEach((e=>{e.classList.remove("active")})),t){case"standby":e.querySelector(".fa-search").classList.add("active");break;case"loading":e.querySelector(".lds-spinner").classList.add("active");break;case"error":e.querySelector(".fa-exclamation").classList.add("active");break;case"ready":e.querySelector(".fa-check").classList.add("active");break;case"reload":e.querySelector(".fa-redo").classList.add("active");break;default:console.log("unexpected input")}},h=(e,t)=>{let a;return function(...r){clearTimeout(a),a=setTimeout((()=>{clearTimeout(a),e(...r)}),t)}};let m=o;const u=new t,y=async e=>{const t=e.target,r=e.target.closest("form"),n=r.querySelector(".search-info-container p");if(n.innerText="",!e.target.value)return m=o,void w(r,m);m=l,w(r,m);try{const s=await u.getQueryLocations(e.target.value);if(s.length<1)return console.log("No locations found"),m=i,w(r,m),void(n.innerText="No results");new a("results").setDatalistChildren(s),((e,t)=>{const a=e.find((({title:e})=>e.toLowerCase()===t.value.toLowerCase()));return!!a&&(t.dataset.currentWoeid=a.woeid,t.dataset.currentCity=a.title,!0)})(s,t)?(m=c,w(r,m)):(m=o,w(r,m))}catch(e){m=d,w(r,m),n.innerText="Try again"}},p=e=>{const t=e.target.closest("form"),a=t.querySelector("input"),r=t.querySelector(".search-info-container p");a.value="",m=o,w(t,m),r.innerText=""},g=new t,_=(new class{set(e,t){try{localStorage.setItem(e,t)}catch(e){}}get(e){try{return localStorage.getItem(e)}catch(e){}return null}remove(e){try{localStorage.removeItem(e)}catch(e){}}},document.querySelector(".home-search-bar")),f=document.querySelector(".daily-search-bar"),T=new a("home-input"),b=new a("daily-input"),v=document.querySelectorAll(".fa-times"),x=document.querySelectorAll(".fa-redo");function $(e){if(e.preventDefault(),m!==c)return;(async e=>{const t=new a("home-view"),r=new a("search-view");u.getWeatherData(e).then((e=>{console.log(e),t.toggleDisplay(),r.toggleDisplay()}))})(this.getElementsByTagName("input")[0].dataset.currentWoeid)}new a("search-view").toggleDisplay(),w(_,m);const D=async()=>{g.getWeatherData(523920).then((e=>{a.setWarsawWeather(e)}))};T.elem.addEventListener("input",h(y,1500)),_.addEventListener("submit",(()=>{$(),D()})),b.elem.addEventListener("input",h(y,1500)),f.addEventListener("submit",(()=>{$(),D()})),v.forEach((e=>{e.addEventListener("click",p)})),x.forEach((e=>{e.addEventListener("click",(()=>{console.log("reload")}))}));
//# sourceMappingURL=index.9e07dffb.js.map
